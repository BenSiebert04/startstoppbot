# Discord Bot Configuration
discord.bot.token=${DISCORD_BOT_TOKEN}

# Portainer Configuration
portainer.url=${PORTAINER_URL}
portainer.username=${PORTAINER_USERNAME}
portainer.password=${PORTAINER_PASSWORD}

# Server Configuration
server.port=12346

# Database Configuration (H2 f端r lokale Entwicklung)
spring.datasource.url=jdbc:h2:file:/DATA/StartStoppBotDc/database/startstoppbot
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

# H2 Console (f端r Entwicklung/Debug)
spring.h2.console.enabled=false
spring.h2.console.path=/h2-console


# Logging Configuration
logging.level.com.example.startstoppbot=INFO
logging.level.org.springframework.web=INFO
logging.file.name=/DATA/StartStoppBotDc/logs/startstoppbot.log
logging.file.max-size=10MB
logging.file.max-history=10

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method

# Application Information
spring.application.name=StartStopp Discord Bot
info.app.name=StartStopp Discord Bot
info.app.description=Discord Bot f端r Container-Management 端ber Portainer
info.app.version=1.0.0

#Scheduler Configuration
scheduler.auto-stop.enabled=true
scheduler.auto-stop.inactivity-minutes=30
scheduler.auto-stop.check-players=true